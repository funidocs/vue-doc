<!--xxxϵͳ-һ���˵���-�����˵���-ҳ������-->
<template>
  <div>
    <a-card :tabList="cardTab" :activeTabKey="listType" @tabChange="onTabChange">
      <span slot="customRender" slot-scope="item">
        <a-badge count="5" :offset="[15, 5]" :numberStyle="{ background: 'rgba(249, 94, 90, 1)' }">
          <span class="f16">���ݲ�ѯ</span>
        </a-badge>
      </span>
      <funi-search></funi-search>
    </a-card>
    <funi-curd
      @btnClick="_btnClick"
      ref="curd"
      :option="curdOption"
      :data="tableList"
      :filterForm="filterForm"
    ></funi-curd>
  </div>
</template>

<script>
  export default {
    name: '${COMPONENT_NAME}',
    components: {},
    props: {},
    created() {

    },
    data() {
      return {
        cardTab: [
          {
          key: 'query',
          // tab: '���ݲ�ѯ',
          scopedSlots: { tab: 'customRender' },
        },
        {
          key: 'count',
          tab: '����ͳ��',
        },
        ],
        listType: 'query',
        curdOption: {
          api: '/api/list/todo',
          method: 'post',
          title: '��Ŀ��������',
          selectionShow: true,//�Ƿ���ʾ��ѡ��
          requestOtherParams: { type: 'todo' },
          columns: [
            {
              title: 'ҵ�����',
              dataIndex: 'id',
              scopedSlots: { customRender: 'id' },
              align: 'center',
              className: 'allowDrag',
              customCell: record => {
                return {
                  on: { // �¼�
                    click: () => {
                      console.log('�������', record);
                    },
                  },
                };
              },
            },
            {
              title: '��Դ',
              dataIndex: 'source',
              align: 'center',
              className: 'allowDrag',
            },
            {
              title: '��ǰ�ڵ�',
              dataIndex: 'node',
              align: 'center',
              className: 'allowDrag',
            },
            {
              title: '��������',
              dataIndex: 'date',
              align: 'center',
              className: 'allowDrag',
            },

            {
              title: '������ʾ',
              dataIndex: 'state',
              key: 'state',
              align: 'center',
              className: 'allowDrag',
              customRender: (text, row, index) => {
                // if (text  == 3) {
                //   return <span>
                //   <a-icon type="minus-circle" style="color:red;margin-right:3px;"/>{text}
                //     </span>
                // }else if(text == 2){
                //   return <span>
                //   <a-icon type="check-circle" style="color:green;margin-right:3px;"/>{text}
                //     </span>
                // } else{
                //   return text
                // }
              },
            },
            {
              title: '��Ŀ����',
              dataIndex: 'itemName',
              align: 'center',
              className: 'allowDrag',
            },
            {
              title: '������ҵ',
              dataIndex: 'company',
              className: 'allowDrag',
              align: 'center',
            },
            {
              title: '����',
              dataIndex: 'action',
              align: 'center',
              width: '150px',
              customRender: (text, row, index) => {
                // if(row.state === 2){
                //   return (
                //     <span>
                //     <a href="javascript:;" onClick={this._btnClick.bind(this, {name:'edit',row:row})}>�༭</a>
                //     <a-divider type="vertical" />
                //     <a href="javascript:;" onClick={this._btnClick.bind(this, {name:'cs',row:row})}>����</a>
                //     </span>
                // )
                // }else{
                //   return   <a href="javascript:;" onClick={this._btnClick.bind(this, {name:'cs',row:row})} >����</a>
                // }
              },
            },
          ],
          pagination: {},
          btns: [
            { label: '�½�', name: 'add', icon: 'plus', disabled: false },
            { label: '��������', name: 'batch', icon: 'plus', batch: true, disabled: true },
          ]
        },
        tableList: [],
      };
    },
    computed: {},
    watch: {
    
    },
    mounted() {

    },
    methods: {
      onTabChange(key) {
        console.log('key', key);
        this.listType = key;
        this.curdOption.requestOtherParams.type = key;
        this.$refs.curd._getData();
      },
      _btnClick(obj) {
        console.log('_btnClick', obj);
        if (obj.name === 'add') {
          this.$refs.createModal.show();
        }
      },
    },
  };
</script>
